version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: alpr-postgres
    environment:
      POSTGRES_DB: alpr_surveillance
      POSTGRES_USER: alpr_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_here}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - alpr-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: alpr-redis
    restart: unless-stopped
    networks:
      - alpr-network

  # ALPR Application
  alpr-app:
    build: .
    container_name: alpr-surveillance
    environment:
      DATABASE_URL: postgresql://alpr_user:${DB_PASSWORD:-secure_password_here}@postgres:5432/alpr_surveillance
      REDIS_URL: redis://redis:6379
      PLATERECOGNIZER_TOKEN: ${PLATERECOGNIZER_TOKEN}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    volumes:
      # Camera access
      - /dev:/dev
      # Persistent storage
      - alpr_videos:/var/lib/alpr-surveillance/videos
      - alpr_images:/var/lib/alpr-surveillance/images
      - alpr_logs:/var/log/alpr-surveillance
      # Configuration
      - ./config:/app/config:ro
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    privileged: true  # Required for camera access
    devices:
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
    networks:
      - alpr-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: alpr-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - alpr-app
    restart: unless-stopped
    networks:
      - alpr-network

  # Monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: alpr-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - alpr-network

  grafana:
    image: grafana/grafana:latest
    container_name: alpr-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - alpr-network

volumes:
  postgres_data:
    driver: local
  alpr_videos:
    driver: local
  alpr_images:
    driver: local
  alpr_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  alpr-network:
    driver: bridge